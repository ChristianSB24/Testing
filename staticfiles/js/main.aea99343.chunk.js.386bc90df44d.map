{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/create.js","tweets/components.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","console","log","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.aea99343.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data){\r\n    jsonData = JSON.stringify(data)\r\n  }\r\n  const xhr = new XMLHttpRequest() \r\n  const url = `http://localhost:8000/api${endpoint}`\r\n  xhr.responseType = \"json\"\r\n  const csrftoken = getCookie('csrftoken'); // getCookie('csrftoken') in tutorial (Investigate why it didnt work that way.)\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n    \r\n  xhr.onload = function() {\r\n    if (xhr.status === 403 && xhr.response) {\r\n      const detail = xhr.response.detail\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\"\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status)\r\n  }\r\n  xhr.onerror = function (e) {\r\n    callback({\"message\": \"The request was an error\"}, 400)\r\n  }\r\n  xhr.send(jsonData)\r\n}\r\n\r\n\r\n","import {backendLookup} from '../lookup'\r\n\r\n\r\nexport function apiTweetCreate(newTweet, callback){\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\r\n  \r\n  }\r\n\r\nexport function apiTweetAction(tweetId, action, callback){\r\n    const data = {id: tweetId, action: action}\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data)\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}`, callback)\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed\"\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback)\r\n\r\n}\r\n\r\n  \r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\"\r\n  if (username){\r\n      endpoint = `/tweets/?username=${username}`\r\n\r\n  }\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback)\r\n}","import React from 'react'\r\n  \r\n\r\nimport {apiTweetAction} from './lookup'\r\n\r\nexport function ActionBtn(props) {\r\n    const {tweet, action, didPerformAction} = props\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className ? props.className: 'btn btn-primary btn-sm'\r\n    const actionDisplay = action.display ? action.display : 'Action'\r\n\r\n    const handleActionBackendEvent = (response, status) =>{\r\n      console.log(response, status)\r\n      if ((status === 200 || status === 201) && didPerformAction){\r\n        didPerformAction(response, status)\r\n      }\r\n    }\r\n    const handleClick = (event) => {\r\n        event.preventDefault()\r\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\r\n  \r\n    }\r\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\r\n    return <button className={className} onClick={handleClick}>{display}</button>\r\n  }","import React from 'react'\r\n\r\n\r\nexport function UserLink (props) {\r\n    const {username} = props\r\n    const handleUserLink = (event) => {\r\n        window.location.href=`/profiles/${username}`\r\n    }\r\n    return <span className='pointer' onClick={handleUserLink}>\r\n        {props.children}\r\n    </span>\r\n}\r\n\r\n\r\nexport function UserDisplay(props){\r\n    const {user, includeFullName} = props\r\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null \r\n    return <React.Fragment>\r\n        {nameDisplay}\r\n        <UserLink username={user.username}>@{user.username}</UserLink>\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n    const {user} = props\r\n    return <UserLink username={user.username}><span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n            {user.username[0]}\r\n    </span></UserLink>\r\n}","import React, {useState} from 'react'\r\n  \r\nimport {ActionBtn} from './buttons'\r\n\r\nimport {\r\n  UserDisplay,\r\n  UserPicture\r\n} from '../profiles'\r\n\r\n\r\nexport function ParentTweet(props){\r\n    const {tweet} = props\r\n    return tweet.parent ?<Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent} /> : null\r\n  }\r\n  export function Tweet(props) {\r\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props\r\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\r\n    let className = props.className ? props.className: 'col-10 mx-auto col-md-6'\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    const match = path.match(/(?<tweetid>\\d+)/ )\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    const handleLink = (event) => {\r\n      event.preventDefault()\r\n      window.location.href = `/${tweet.id}`\r\n    }\r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if (status === 200){\r\n        setActionTweet(newActionTweet)\r\n      }else if (status === 201) {\r\n        if (didRetweet){\r\n          didRetweet(newActionTweet)\r\n        }\r\n      }\r\n    }\r\n\r\n    return <div className={className}>\r\n        {isRetweet === true && <div className='mb-2'>\r\n          <span className='small text-muted'>Retweet via <UserDisplay user={retweeter} /></span>\r\n        </div>}\r\n        <div className='d-flex'>\r\n\r\n          <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className='col-11'>\r\n            <div>\r\n              <p>\r\n                <UserDisplay includeFullName user={tweet.user} />\r\n              </p>\r\n              <p>{tweet.content}</p>\r\n\r\n              <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n            </div>\r\n        <div className='btn btn-group px-0'>\r\n        {(actionTweet && hideActions !== true) && <React.Fragment>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"like\", display:\"Likes\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"unlike\", display:\"Unlike\"}}/>\r\n                <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{type: \"retweet\", display:\"Retweet\"}}/>\r\n              </React.Fragment>\r\n        }\r\n                {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n              </div>\r\n              </div>\r\n        </div>\r\n        </div>\r\n    }","import React, {useEffect, useState} from 'react'\r\n  \r\nimport {apiTweetList} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n        const final = [...props.newTweets].concat(tweetsInit)\r\n        if (final.length !== tweets.length) {\r\n          setTweets(final)\r\n        }\r\n    },    [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          } else {\r\n            alert(\"There was an error\")\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`}/>\r\n    })}\r\n    { nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React, {useEffect, useState}  from 'react'\r\n\r\nimport {apiTweetFeed} from './lookup'\r\n\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([])\r\n    const [tweets, setTweets] = useState([])\r\n    const [nextUrl, setNextUrl] = useState(null)\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\r\n    useEffect(()=>{\r\n      const final = [...props.newTweets].concat(tweetsInit)\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final)\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit])\r\n\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false){\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results)\r\n            setTweetsDidSet(true)\r\n          }\r\n        }\r\n        apiTweetFeed(handleTweetListLookup)\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\r\n\r\n\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweets(updateFinalTweets)\r\n    }\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null) {\r\n        const handleLoadNextResponse = (response, status) =>{\r\n          if (status === 200){\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets)\r\n            setTweets(newTweets)\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n\r\n    return <React.Fragment>{tweets.map((item, index)=>{\r\n      return <Tweet  \r\n        tweet={item} \r\n        didRetweet={handleDidRetweet}\r\n        className='my-5 py-5 border bg-white text-dark' \r\n        key={`${index}-{item.id}`} />\r\n    })}\r\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\r\n    </React.Fragment>\r\n  }","import React from 'react'\r\nimport {apiTweetCreate} from './lookup'\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef()\r\n  const {didTweet} = props\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201){\r\n      didTweet(response)\r\n    } else {\r\n      console.log(response)\r\n      alert(\"An error occured please try again.\")\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const newVal = textAreaRef.current.value\r\n    // backend api request\r\n    apiTweetCreate(newVal, handleBackendUpdate)\r\n    textAreaRef.current.value = ''\r\n  }\r\n  return <div className={props.className}>\r\n                  <form onSubmit={handleSubmit}>\r\n                      <textarea ref={textAreaRef} required={true} className='form-control' name='tweet'>\r\n\r\n\r\n                      </textarea>\r\n                      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\r\n                  </form>\r\n          </div>\r\n}","import React, {useEffect, useState} from 'react'\r\n  \r\nimport {TweetsList} from './list'\r\nimport {Tweet} from './detail'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {FeedList} from './feed'\r\nimport {TweetCreate} from './create'\r\n\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([])\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) =>{\r\n    let tempNewTweets = [...newTweets]\r\n    tempNewTweets.unshift(newTweet)\r\n    setNewTweets(tempNewTweets)\r\n  }\r\n  return <div className={props.className}>\r\n          {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n        <FeedList newTweets={newTweets} {...props} />\r\n  </div>\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n    const [newTweets, setNewTweets] = useState([])\r\n    const canTweet = props.canTweet === \"false\" ? false : true\r\n    const handleNewTweet = (newTweet) => {\r\n      let tempNewTweets = [...newTweets]\r\n      tempNewTweets.unshift(newTweet)\r\n      setNewTweets(tempNewTweets)\r\n    }\r\n    return <div className={props.className}>\r\n            {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\r\n        <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if (didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport reportWebVitals from './reportWebVitals';\n//import * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif (tweetsEl) {\n    ReactDOM.render(\n      e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container=> {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container);\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//serviceWorker.unregister();\n"],"sourceRoot":""}